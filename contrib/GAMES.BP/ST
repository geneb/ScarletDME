*  STAR TREK BY KEN SIMMS
     DIM R(20),C(20),T(20),E(20),N(20),F(15),S(5),D(5)
     CLEAR
     HEADING ''
     PRINT 'DO YOU WANT TO SEE YOUR MISSION INSTRUCTIONS':
     INPUT COM
     IF COM[1,1]='Y' THEN GOSUB 50000
     D(1)='WARP ENGINES'
     D(2)='FIRE CONTROL'
     D(3)='SENSORS'
     D(4)='LAUNCH CONTROL'
     D(5)='REACTOR CONTROL'
     EF=5; T(1)='E'; E(1)=2000; R(1)=RND(50)+100; C(1)=RND(50)+100; N(1)=1
     COM=50-RND(50); COM2=50-COM
     DIFF=50; COM=DIFF-RND(DIFF); COM2=DIFF-COM
     IF RND(2)=1 THEN COM=-COM
     IF RND(2)=1 THEN COM2=-COM2
     T(2)='B'; E(2)=500; R(2)=R(1)+COM; C(2)=C(1)+COM2; N(2)=1
     LOOP
       PRINT 'AVERAGE POWER OF KLINGON BATTLE CRUISER (100-300)':
       INPUT COMX
     UNTIL COMX GE 100 AND COMX LE 300 DO
     REPEAT
     NUMENEMY=8; COMX=COMX/2
     FOR I=1 TO NUMENEMY
       T9=I; S9=COMX*(RND(4)+1); GOSUB 12000
       KPOWER=KPOWER+S9
     NEXT I
************************************************
*
*  DRIVER ROUTINE
*
************************************************
500  GOSUB 2300
1000 PRINT 'COMMAND ':
     INPUT COM
     IF COM = 'M' THEN GOTO 1100
     IF COM = 'F' THEN GOTO 1200
     IF COM = 'D' THEN GOTO 1300
     IF COM = 'L' THEN GOTO 2800
     IF COM = 'R' THEN GOTO 2900
     IF COM = 'END' THEN STOP
     PRINT
     PRINT '  OPTIONS:'
     PRINT '  M = MOVE'
     PRINT '  F = FIRE'
     PRINT '  D = DISPLAY'
     PRINT '  L = LAUNCH CONTROL'
     PRINT '  R = RECHARGE REACTOR'
     PRINT '  END = END GAME'
     PRINT
     GOTO 1000
***********************************************
*
*  MAIN ROUTINES
*
***********************************************
1100 *  MOVE
     PRINT 'HEADING ':; INPUT COM
     IF COM = 'F' ! COM = 'A' ! COM = 'S' ! COM = 'P' THEN GOTO 1110
     PRINT
     PRINT '  OPTIONS:'
     PRINT '  F = FORWARD'
     PRINT '  A = AFT'
     PRINT '  S = STARBOARD'
     PRINT '  P = PORT'
     PRINT
     GOTO 1000
1110 PRINT 'DISTANCE ':
     INPUT COM2
     IF COM2<=0 OR NOT(NUM(COM2)) THEN PRINT 'ILLEGAL DISTANCE'; GOTO 1100
     IF COM2*COM2 > E(1) THEN PRINT 'INSUFFICIENT ENERGY'; GOTO 1100
     IF S(1)<0 AND COM2>3 THEN PRINT D(1):' DAMAGED. MAX DISTANCE = 3';GOTO 1100
     E(1)=E(1)-COM2*COM2
     IF COM = 'F' THEN R(1)=R(1)-COM2
     IF COM = 'A' THEN R(1)=R(1)+COM2
     IF COM = 'S' THEN C(1)=C(1)+COM2
     IF COM = 'P' THEN C(1)=C(1)-COM2
1150 *  CHECK FOR DOCKING
     IF R(1)=R(2) THEN IF C(1)=C(2) THEN E(1)=2000; PRINT 'DOCKED!'
     MOVES=MOVES+1 ; * COUNT NUMBER OF ENTERPRISE MOVES.
     GOSUB 3000 ; * BASE, KLINGONS, AND FIGHTERS MOVE.
*  CHANGE STATUS
     FOR I=1 TO 5
       IF S(I)<0 THEN S(I)=S(I)+1; PRINT D(I):' STATUS = ':S(I)
     NEXT I
     IF RND(10)<5 THEN GOTO 500
     TEMP = RND(5)+1
     S(TEMP) = S(TEMP)-(RND(3)+1)
     IF TEMP=3 THEN EF=1
     PRINT 'SABOTAGE! ': D(TEMP):' STATUS = ':S(TEMP)
     GOTO 500
1200 *  FIRE
     IF S(2)<0 THEN PRINT D(2):' NOT OPERATIONAL'; GOTO 1000
     PRINT 'TARGET NUMBER':
     INPUT COM
     FOR ROW2=1 TO 20
       IF T(ROW2) = COM THEN GOTO 1225
     NEXT ROW2
     PRINT 'NO SUCH TARGET'; GOTO 1000
1225 PRINT 'PHOTON TORPEDOS':
     INPUT COM2
     IF COM2<1 OR NOT(NUM(COM2)) THEN PRINT 'ILLEGAL NUMBER OF TORPEDOS'; GOTO 1000
     IF COM2*10>E(1) THEN PRINT 'INSUFFICIENT ENERGY'; GOTO 1000
     E(1)=E(1)-COM2*10
     RANGE = ABS(R(1)-R(ROW2))+ABS(C(1)-C(ROW2))
     TEMP=COM2*10
     GOSUB 9777
     GOTO 1150
1300 *  DISPLAY
     IF S(3)<0 THEN PRINT D(3):' DAMAGED. EXPANSION FACTOR = 1'; GOTO 500
     PRINT 'EXPANSION FACTOR ':
     INPUT EF
     GOTO 500
2300 PRINT
     PRINT '-!-!-!-!-! STARDATE ':MOVES 'L##':' !-!-!-!-!-'
     MAT F='                              '
     R0=R(1); C0=C(1)
     FOR I=1 TO 20
       IF R(I) = 0 THEN GOTO 2450
       R1=INT((R(I)-R0)/EF)+8
       C1=INT((C(I)-C0)/EF)+8
       IF R1<16 AND R1>0 AND C1<16 AND C1>0 THEN
         C1=C1+C1
         F(R1)=F(R1)[1,C1-1] CAT T(I) CAT F(R1)[C1+1,999]
       END
     2450  NEXT I
*  STATUS AND RANGE
     FOR I=1 TO 15
       PRINT ':':F(I):' :':
       J=I-INT((16-LASTROW)/2)
       IF J<0 THEN PRINT; GOTO 2620
       IF J=0 THEN PRINT '   ENERGY RANGE'; GOTO 2620
       IF J=1 THEN
         PRINT E(1) 'R E #####'
         GOTO 2620
       END
       IF R(J) = 0 THEN PRINT; GOTO 2620
       TEMP=ABS(R0-R(J))+ABS(C0-C(J))
       PRINT ' ':T(J):E(J) 'R #####':TEMP 'R ###'
     2620  NEXT I
     PRINT '-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-'
     RETURN
2800 *  LAUNCH FIGHTERS
     IF S(4)<0 THEN PRINT D(4):' NOT OPERATIONAL'; GOTO 1000
     PRINT 'NUMBER ':; INPUT COM
     PRINT 'POWER ':; INPUT COM2
     IF COM<1 OR COM2<1 THEN PRINT 'NUMBER IS LESS THAN 1'; GOTO 1000
     IF E(1)<COM*COM2*2 THEN PRINT 'INSUFFICIENT ENERGY'; GOTO 1000
     E(1)=E(1)-COM*COM2*2; T9='F'; S9=COM2; R9=R(1); C9=C(1)
     FOR I=1 TO COM
       GOSUB 12100
     NEXT I
     PRINT COM:' FIGHTERS LAUNCHED'
     GOTO 1150
2900 *  RECHARGE
     IF S(5)<0 THEN PRINT D(5):' NOT OPERATIONAL'; GOTO 1000
     TEMP=RND(300)
     PRINT 'REACTOR RECHARGED ':TEMP:' UNITS'
     E(1)=E(1)+TEMP
     GOTO 1150
3000 ******************************************
*  EXECUTE REST OF MATRIX
******************************************
     FOR ROW=2 TO 20
       IF R(ROW) = 0 THEN GOTO 3030
       TYPE=T(ROW)
       GOSUB 3400
     3030  NEXT ROW
     RETURN
3400 *FIND CLOSEST TARGET
*R0,C0 = LAUNCH POINT
*R1,C1 = TARGET POINT
*RANGE = RANGE
     R0=R(ROW); C0=C(ROW); RANGE = 999999
     FOR I=1 TO 20
       IF R(I) NE 0 THEN IF I#ROW THEN IF N(I)#N(ROW) THEN
         TEMP = ABS(R(I)-R0) + ABS(C(I)-C0)
         IF TEMP<RANGE THEN RANGE=TEMP; ROW2=I
       END
     NEXT I
     R1=R(ROW2); C1=C(ROW2)
     FIRINGRANGE=E(ROW)/40+RND(5)
     IF TYPE = 'B' THEN R1=R(1); C1=C(1); GOTO 3500
     IF TYPE = 'F' THEN
       IF RANGE>FIRINGRANGE THEN GOTO 3500 ELSE GOTO 3700
     END
     IF RANGE>FIRINGRANGE THEN R1=R(2); C1=C(2); GOTO 3500
     GOTO 3700
3500 *MOVE TOWARD TARGET
     IF R1>R0 THEN R2=RND(3)+3 ELSE R2=-(RND(3)+3)
     IF C1>C0 THEN C2=RND(3)+3 ELSE C2=-(RND(3)+3)
     R(ROW)=R(ROW)+R2; C(ROW)=C(ROW)+C2
     RETURN
3700 *FIRE
     TEMP=E(ROW)
9777 S9=INT(TEMP*RND(10)/(RANGE+1))
     E(ROW2)=E(ROW2)-S9
     PRINT S9:' UNIT HIT ON ':
     TYPE=T(ROW2)
     IF TYPE = 'E' THEN PRINT 'ENTERPRISE': ELSE
       IF TYPE = 'B' THEN PRINT 'BASE': ELSE
         IF TYPE = 'F' THEN PRINT 'FIGHTER': ELSE
           PRINT 'KLINGON ':TYPE:
         END
       END
     END
     IF E(ROW2)>0 THEN PRINT; RETURN
     PRINT '  DESTROYED.'; R(ROW2)=0
     IF TYPE = 'B' THEN GOTO 9800
     IF TYPE = 'E' THEN GOTO 9850
     IF NUM(TYPE) THEN NUMENEMY=NUMENEMY-1
     IF NUMENEMY=0 THEN GOTO 9900
     RETURN
**************************************************
*
*  END GAME
*
**************************************************
9800 PRINT
     PRINT 'YOUR STAR BASE HAS BEEN DESTROYED!!!'
     GOTO 9870
9850 PRINT
     PRINT 'THE ENTERPRISE HAS BEEN DESTROYED!!!'
9870 PRINT 'THE FEDERATION LOSES!!!!'
     PRINT 'AAAAAAAUUUUUUUUGGGGGHHHHHHH!!!!!!!!!!!........'
     STOP
9900 PRINT
     PRINT 'THE ENTERPRISE IS VICTORIOUS!!!'
     PRINT 'HHHHHHHOOOOOOORRRRRRAAAAAAAAAAAYYYYY!!!!!!!'
     PRINT 'TOTAL KLINGON POWER = ':KPOWER
     PRINT 'NUMBER OF MOVES = ':MOVES
     PRINT '****** YOUR SCORE IS ':KPOWER*100/MOVES:' ******'
     STOP
****************************************
*
*  SUBROUTINES
*
****************************************
11000*RETRIEVE(R9,C9)
*OUTPUT: FLAG=1 : FOUND
*        FLAG=0 : NOT FOUND
     FLAG=1
     FOR ROW2=2 TO 20
       IF R(ROW2) = R9 THEN IF C(ROW2) = C9 THEN T9=T(ROW2);S9=E(ROW2);RETURN
     NEXT ROW2
     FLAG=0; T9=' '
     RETURN
12000*STORE-OBJECT(T9,S9)
     R9=R(2)+RND(DIFF)-RND(DIFF); C9=C(2)+RND(DIFF)-RND(DIFF)
12100*STORE(R9,C9,T9,S9) (IF POSSIBLE)
     FOR J = 2 TO 20
       IF R(J) = 0 THEN GOTO 12200
     NEXT J
     RETURN
12200R(J)=R9; C(J)=C9; T(J)=T9;  E(J)=S9
     IF NUM(T9) THEN N(J)=2 ELSE N(J)=1
     IF J > LASTROW THEN LASTROW=J
     RETURN
*****************************************************
*
*  INSTRUCTIONS
*
*****************************************************
50000* INSTRUCTIONS
     PRINT
     PRINT
     PRINT 'TO: COMMANDER STARSHIP ENTERPRISE'
     PRINT 'FROM: STARFLEET COMMAND'
     PRINT 'SUBJECT: KLINGON INVASION'
     PRINT
     PRINT
     PRINT '   AS COMMANDER OF THE FEDERATION STARSHIP ENTERPRISE,'
     PRINT 'YOUR MISSION IS TO DESTROY THE KLINGON BATTLE FLEET'
     PRINT 'THAT HAS INVADED FEDERATION SPACE.'
     PRINT '   YOU HAVE ONE SUPPORTING STARBASE.  THE ENTERPRISE CAN'
     PRINT 'BE RESUPPLIED WITH ENERGY BY DOCKING (MOVING ON TOP OF)'
     PRINT 'THE STARBASE.  YOU MUST PROTECT IT AT ALL COSTS.'
     PRINT
     PRINT
     PRINT 'HIT RETURN TO CONTINUE':
     INPUT TEMP
     PRINT
     PRINT '   YOU HAVE 5 COMMAND OPTIONS (ON EVERY TURN):'
     PRINT
     PRINT '1. MOVE (M)'
     PRINT '   YOU MAY MOVE FORWARD, AFT, STARBOARD, OR PORT (F,A,S,P).'
     PRINT '   ENERGY USED = DISTANCE (IN SECTORS) SQUARED.'
     PRINT '2. FIRE (F)'
     PRINT '   YOU MAY FIRE PHOTON TORPEDOS AT A SPECIFIC KLINGON WARSHIP.'
     PRINT '   KLINGON WARSHIPS ARE NUMBERED 1 THROUGH 8 ON THE DISPLAY.'
     PRINT '   THE EFFECTIVENESS OF A HIT DEPENDS MAINLY ON THE RANGE.'
     PRINT '   ENERGY USED = 10 TIMES THE NUMBER OF TORPEDOS FIRED.'
     PRINT '3. DISPLAY (D)'
     PRINT '   YOU MAY RE-DISPLAY ANY PORTION OF THE GALAXY BY SPECIFING A NEW'
     PRINT '   EXPANSION FACTOR. (YOU START OUT WITH EXPANSION FACTOR 5).'
     PRINT '   THE LARGER THE EXPANSION FACTOR, THE MORE THAT IS DISPLAYED OF '
     PRINT '   THE GALAXY, BUT THE POORER THE RESOLUTION.'
     PRINT '   ENERGY USED = NONE'
     PRINT '4. LAUNCH FIGHTERS (L)'
     PRINT '   YOU MAY LAUNCH FIGHTERS WHICH ATTACK KLINGON WARSHIPS.'
     PRINT '   ENERGY USED = 2 TIMES THE AMOUNT OF ENERGY GIVEN THE FIGHTERS.'
     PRINT '5. RECHARGE REACTOR (R)'
     PRINT '   YOU MAY RECHARGE YOUR REACTOR FROM 1 TO 300 UNITS OF ENERGY.'
     PRINT
     RETURN
END
